@startuml main
skinparam classAttributeIconSize 0
package "student" #DDDDDD {
    class Student {
        - __stu_id: str
        - __full_name: str
        - __short_name: str

        + get_stu_id(): str
        + get_full_name(): str
        + get_short_name(): str
    }

    abstract class AbstractStudentRepo {
        + {abstract} __enter__(): None
        + {abstract} __exit__(exc_type, exc_val, exc_tb): None
        + {abstract} get_student(stu_id: str): Student
        + {abstract} get_all_students(): List[Student]
    }

    class CSVStudentRepo extends AbstractStudentRepo {
        - __students: Dict[str, Student]
        - __csv_path: str
        - __csv_file: IO

        + __init__(csv_path: str): None
        + __enter__(): None
        + __exit__(exc_type, exc_val, exc_tb): None
        + get_student(stu_id: str): Student
        + get_all_students(): List[Student]
    }

    CSVStudentRepo o-- Student

    abstract class AbstractSimilarReporter {
        + {abstract} __enter__(): None
        + {abstract} __exit__(exc_type, exc_val, exc_tb): None
        + {abstract} generate_reporter(report_data: List[List[str]]): None
    }

    abstract class CSVSimilarReporter extends AbstractSimilarReporter {
        - __csv_file: IO
        - __csv_writer: _writer
        + __enter__(): None
        + __exit__(exc_type, exc_val, exc_tb): None
        + generate_reporter(report_data: List[List[str]]): None
    }

    class SimilarGroup {
        - __similar_set: Dict[str, str]
        - __similar_reason: Dict[str, set]

        + find(stu_id: str): str
        + union(stu_id1: str, stu_id2: str): None
        + union_with_reason(stu_id1: str, reason: int): None

        + get_similar_set(): Dict[str, str]
        + get_similar_reason: Dict[str, set]
    }
}

package "extractor" {
    abstract class Extractor {
        # _source_path: str
        # _target_path: str

        + {abstract} __init__(source_path: str, target_path: str): None
        + {abstract} __enter__(): None
        + {abstract} __exit(exc_type, exc_val, exc_tb): None
        + {abstract} extract(): None
    }

    class UnZip extends Extractor {
        # _source_path: str
        # _target_path: str

        + __init__(source_path: str, target_path: str): None
        + __enter__(): None
        + __exit(exc_type, exc_val, exc_tb): None
        + extract(): None
    }

    class UnRar extends Extractor {
        # _source_path: str
        # _target_path: str

        + __init__(source_path: str, target_path: str): None
        + __enter__(): None
        + __exit(exc_type, exc_val, exc_tb): None
        + extract(): None
    }

    class ExtractorFactory {
        - __source_path: str
        _ __target_path: str
        + get_extractor(): Extractor
    }

    class ExtractPipeline {
        + __init__()
        + extract_all()
    }
}

class NormLab {
    - __homeworks_path: str
    - __lab_id: str
    - __result_dir: str
    - __student_repo: AbstractStudentRepo
    - __similar_group: SimilarGroup
    - __similar_reporter: AbstractSimilarReporter

    + extract_source_homework(): None
    + delete_extra_files(): None
    + move_reports(): None
    + remove_repetitive_dir(): None
    + generate_similar_report(): None

    + get_homeworks_path(): str
    + get_lab_id(): str
    + get_result_dir(): str
    + get_students_repo(): str
}

NormLab o-- AbstractSimilarReporter
NormLab o-- AbstractStudentRepo
NormLab o-- SimilarGroup
NormLab ..> ExtractPipeline
ExtractPipeline ..> ExtractorFactory
ExtractorFactory ..> Extractor
@enduml